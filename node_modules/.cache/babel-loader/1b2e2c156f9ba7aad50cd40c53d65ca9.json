{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isaia\\\\Documents\\\\Coding\\\\R\\\\starter\\\\src\\\\components\\\\todoContainer.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport TodoList from \"./TodoList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./inputTodo\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoContainer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos: []\n    };\n\n    this.handleChange = id => {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => {\n          if (todo.id === id) {\n            return { ...todo,\n              completed: !todo.completed\n            };\n          }\n\n          return todo;\n        })\n      }));\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => {\n          return todo.id !== id;\n        })]\n      });\n    };\n\n    this.addTodoItem = title => {\n      const newTodo = {\n        id: uuidv4(),\n        title: title,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n\n    this.setUpdate = (updatedTitle, id) => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.title = updatedTitle;\n          }\n\n          return todo;\n        })\n      });\n    };\n  }\n\n  // This is a Lifecycle method that executes directly after the Render function runs.\n  // componentDidMount() {\n  //   fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\n  //     .then(response => response.json())\n  //     .then(data => this.setState({todos: data}));\n  // }\n  componentDidUpdate(prevState, prevProps) {\n    if (prevState !== this.state.todos) {\n      const tmp = JSON.stringify(this.state.todos);\n      localStorage.setItem('todos', tmp);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputTodo, {\n          addTodos: this.addTodoItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          handleChangeProps: this.handleChange,\n          todos: this.state.todos,\n          deleteTodos: this.delTodo,\n          setUpdate: this.setUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default TodoContainer;","map":{"version":3,"names":["React","Component","TodoList","Header","InputTodo","v4","uuidv4","TodoContainer","state","todos","handleChange","id","setState","prevState","map","todo","completed","delTodo","filter","addTodoItem","title","newTodo","setUpdate","updatedTitle","componentDidUpdate","prevProps","tmp","JSON","stringify","localStorage","setItem","render"],"sources":["C:/Users/isaia/Documents/Coding/R/starter/src/components/todoContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./inputTodo\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nclass TodoContainer extends Component {\r\n\r\n    state ={\r\n        todos: [\r\n\r\n        ] \r\n    }\r\n    // This is a Lifecycle method that executes directly after the Render function runs.\r\n    // componentDidMount() {\r\n    //   fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\r\n    //     .then(response => response.json())\r\n    //     .then(data => this.setState({todos: data}));\r\n    // }\r\n\r\n    componentDidUpdate(prevState, prevProps){\r\n      if(prevState !== this.state.todos){\r\n        const tmp = JSON.stringify(this.state.todos)\r\n        localStorage.setItem('todos', tmp)\r\n      }\r\n    }\r\n\r\n    handleChange = (id) =>{\r\n      this.setState(prevState => ({\r\n        todos: prevState.todos.map(todo => {\r\n          if (todo.id === id){\r\n            return{\r\n              ...todo,\r\n              completed: !todo.completed\r\n            }\r\n          }\r\n          return todo;\r\n        }),\r\n      }))\r\n    }\r\n\r\n    delTodo = id =>{\r\n      this.setState({\r\n        todos: [\r\n          ...this.state.todos.filter(todo =>{\r\n            return todo.id !== id;\r\n          })\r\n        ]\r\n      })\r\n    }\r\n\r\n    addTodoItem = title => {\r\n      const newTodo ={\r\n        id: uuidv4(),\r\n        title: title,\r\n        completed: false\r\n      }\r\n      this.setState({\r\n        todos: [...this.state.todos, newTodo]\r\n      })\r\n    }\r\n\r\n    setUpdate = (updatedTitle, id) => {\r\n      this.setState({\r\n        todos: this.state.todos.map(todo => {\r\n          if (todo.id === id){\r\n            todo.title = updatedTitle\r\n          }\r\n          return todo\r\n        })\r\n      })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"inner\">\r\n            <Header />\r\n            <InputTodo addTodos = {this.addTodoItem}/>\r\n            <TodoList handleChangeProps = {this.handleChange} todos={this.state.todos} deleteTodos = {this.delTodo} setUpdate ={this.setUpdate}/>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n \r\nexport default TodoContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}